{
  "name": "Comparison of technologies for parallel computations on Intel Xeon Phi",
  "tagline": "XeonPhi, OpenCL, OpenMP, MPI, C++, Parallel computing",
  "body": "### Welcome.\r\nThis is a page of a engineer's degree repository. The main clue of this engineer's is to compare the most popular technologies for a parallel computations on Intel Xeon Phi Accelerator. Feel free to fork. Repository is under Apache License.\r\n\r\n### Project description\r\nFollowing project resolves the issues, in the field of Computer Science, related to parallel computing. This is a type of calculation, wherein many instructions are executed simultaneously. Currently there are multiple existing technologies, which can be used in implementation of such a model, but the purpose of this project is to compare the Message Passing Interface, Open Multi Processing and Open Computing Language on the accelerator Intel Xeon Phi 5120. The comparison was made for the three main problem areas associated with this type of computations. Those are a large number of calculations, the enormity of the data and a multitude of the communication. In order to illustrate this problem, in the context of this project, the total number of twelve applications, four for each of the mentioned areas, had been made. Among implementation there is a serial version, which was the basis used for creation of a MPI, OpenMP and OpenCL versions, so that the comparison was fair and correct. It is worth noting\r\nthat in the project offload model was used, so the appropriate algorithm computations were performed only on the coprocessor site.\r\nApplications, which illustrate the problems, are performing vizualization of Mandelbrot set (a large number of simple computations), creation of an image consisting of rectangles which are generated using genetic algorithm (calculations on extensive data), and the simulation of a clientserver architecture (high intensity of communication). At the end of this paper, the results of the comparison were presented, and the best technologies, regarding selected problem areas, were pointed. Optimizations, which could\r\ncomplement the essence of this project, were also proposed.\r\n\r\n### Main problem areas associate with parallel computations\r\nThe main problem is excelent described in below picture.\r\n!['Problem triangle', source: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.671.2893&rep=rep1&type=pdf](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/76d16e0c4e99330b4c3ce95db49d6b1b8fec7e4a/images/triangle.png)\r\n\r\n\r\nAs we can see there are three main problems while writing a parallel applications. Problems with communication, with data size and computation complexity. We want to focus on these problems in the next sections.\r\n### Problem 1st 'Large number of simple computations' Mandelbrot set\r\n## MPI\r\n![Mandelbrot set, MPI Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Mandelbrot_MPI.png)\r\n## OpenMP\r\n![Mandelbrot set, OpenMP Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Mandelbrot_OpenMP.png)\r\n## OpenCL\r\n![Mandelbrot set, OpenCL Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Mandelbrot_OpenCL.png)\r\n### Problem 2nd 'Calculations on extensive data' Genetic algorithm\r\n## MPI\r\n![Genetic algorithm, MPI Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Genetic_MPI.png)\r\n## OpenMP\r\n![Genetic algorithm, OpenMP Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Genetic_OpenMP.png)\r\n## OpenCL\r\n![Genetic algorithm, OpenCL Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Genetic_OpenCL.png)\r\n### Problem 3rd 'High intensity of communication' ClientServer app\r\n## MPI\r\n![Client server app, MPI Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/ClientServer_MPI.png)\r\n## OpenMP\r\n![Client server app, OpenMP Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/ClientServer_OpenMP.png)\r\n## OpenCL\r\n![Client server app, OpenCL Implementation](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/ClientServer_OpenCL.png)\r\n### Additional calculation with different settings for MIC_KMP_AFFINITY variable\r\n## Compact\r\n![Mandelbrot set, OpenMP with MIC_KMP_AFFINITY set to COMPACT](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Mandelbrot_OpenMP_Compact_MIC_KMP_AFFINITY.png)\r\n## Scatter\r\n![Mandelbrot set, OpenMP with MIC_KMP_AFFINITY set to SCATTER](https://raw.githubusercontent.com/MNie/ComparisonOfOpenCLOpenMPMPI/17b88f628206a0b1c4984c4fcb53bda83067d425/results/Mandelbrot_OpenMP_Scatter_MIC_KMP_AFFINITY.png)\r\n### Authors\r\n@MNie\r\n@MiniRoman\r\n@Blasius93\r\n\r\n### Support or Contact\r\nHave any question? Contact us. On @MNie profile you can find email to contact.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}